未解之谜 lq niit 什么意思
olsr 支持对包进行分组
对于 hello 和 tc 包 有缓存队列
mid 包则没有内部缓存
hna 包队列里注释这样写的 <b> NB! Not internal packetformat!</b>
四个函数签名
bool queue_hello(struct hello_message *message, struct interface *ifp);
bool queue_tc(struct tc_message *message, struct interface *ifp);
bool queue_mid(struct interface *ifp);
bool queue_hna(struct interface *ifp);
build_msg.c 118-2226

在 olsr 中存在的链表是双向链表
duplicate_hanlder.h 里有一个 duplicate_hanlder 结构体
声明如下
struct duplicate_handler{
	struct list_node node;

	void (*originator_collision) (uint8_t msgType);
	void (*hna_collision)(union olsr_ip_addr *hna, union olsr_ip_addr *orig);
	void (*mid_collision)(union olsr_ip_addr *mid, union olsr_ip_addr *orig);
	};
(好像有丶复杂 void 字段作用一会儿再查一查吧)
(kao 这就是一个函数指针)

声明在 duplicate_set.h 中的结构体
struct dup_entry {
  struct avl_node avl;
  union olsr_ip_addr ip;
  uint16_t seqnr;
  uint16_t too_low_counter;
  uint32_t array;
  uint32_t valid_until;
};
duplicate_set.c 里第 114 行开始的函数 判断收到的 message 是不是 duplicate
签名如下
int olsr_message_is_duplicate(union olsr_message *m);

tc_set.h 中全局变量 tc_tree

gateway.c 和 gateway.h 两个文件应该处于核心位置 以后再看

一级生成各种数据包的函数在 generate_msg
签名：
void generate_hello(void *);

void generate_mid(void *);

void generate_hna(void *);

void generate_tc(void *);

void generate_stdout_pulse(void *);


hna.h 中声明的有关 hna 数据包的两个结构体

/* hna_netmask declared in packet.h */

struct hna_net {
  struct olsr_ip_prefix hna_prefix;
  struct timer_entry *hna_net_timer;
  struct hna_entry *hna_gw;            /* backpointer to the owning HNA entry */
  struct hna_net *next;
  struct hna_net *prev;
};

struct hna_entry {
  union olsr_ip_addr A_gateway_addr;
  struct hna_net networks;
  struct hna_entry *next;
  struct hna_entry *prev;
};

hna.c 中两个比较有意义的函数

static bool olsr_delete_hna_net_entry(struct hna_net *net_to_delete);
int olsr_init_hna_set(void);

hysteresis 两个文件内函数有点复杂， 关于迟滞的。 等对整个系统有了进一步了解再看。

interfaces.h 和 interfaces.c 有对物理接口的描述 以及参与 olsr 接口的 CURD 函数

olsrd 使用 1212 port 进行进程间通信

ipcalc 是 ip 各种地址等各种转换

link_set 描述连接 划重点 最后详细看 *****

lq_mpr.h 和 lq_mpr.c 就一个函数 void olsr_calculate_lq_mpr(void); 但是目前找不到 lq 什么意思

lq_packet 包含数据包，包头等格式的声明
以及 hello 等数据包的 create, serialize, output 等
但是后面的 packet 文件有相似定义 所以 lq 啥意思
